import random
import re

# ==============================================================================
# ==                            –§–†–ê–ó–´ –ê–ö–¢–ò–í–ê–¶–ò–ò/–î–ï–ê–ö–¢–ò–í–ê–¶–ò–ò                     ==
# ==============================================================================

WH40K_PHRASES_START = [
    "++ –¢–†–ê–ù–°–ú–ò–°–°–ò–Ø –ê–°–¢–†–û–ü–ê–¢–ò–ö–ê –ü–†–ò–ù–Ø–¢–ê ++ \n\n–í–ê–†–ü-–®–¢–û–†–ú –ù–ê–î–í–ò–ì–ê–ï–¢–°–Ø! –ê–ö–¢–ò–í–ò–†–û–í–ê–ù –ü–†–û–¢–û–ö–û–õ '–≠–ö–°–¢–ï–†–ú–ò–ù–ê–¢–£–°'! üõ°Ô∏è –ó–ê –ò–ú–ü–ï–†–ê–¢–û–†–ê!",
    "–ï–†–ï–°–¨! –ß–£–í–°–¢–í–£–Æ –ó–ê–ü–ê–• –ï–†–ï–°–ò! ‚öîÔ∏è –ò–º–µ–Ω–µ–º –ë–æ–≥–∞-–ò–º–ø–µ—Ä–∞—Ç–æ—Ä–∞, —ç—Ç–æ—Ç —á–∞—Ç –æ–±—ä—è–≤–ª—è–µ—Ç—Å—è –∑–æ–Ω–æ–π –±–æ–µ–≤—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π! –°–ñ–ï–ß–¨ –ï–†–ï–¢–ò–ö–ê! –£–ù–ò–ß–¢–û–ñ–ò–¢–¨ –ö–°–ï–ù–û–°–ê!",
    "–ö–†–û–í–¨ –î–õ–Ø –ë–û–ì–ê –ö–†–û–í–ò! ü©∏ –ß–ï–†–ï–ü–ê –î–õ–Ø –¢–†–û–ù–ê –ß–ï–†–ï–ü–û–í! –†–ï–ñ–ò–ú –•–ê–û–°–ê –ù–ï–û–î–û–õ–ò–ú–û–ì–û –ê–ö–¢–ò–í–ò–†–û–í–ê–ù!",
    "WAAAGH! –ó–î–ï–°–Ø –°–õ–´–®–ö–ê–ú –ú–ù–û–ì–ê –ë–ê–õ–¢–ê–í–ù–ò –ò –°–õ–´–®–ö–ê–ú –ú–ê–õ–ê –î–†–ê–ö–ò! üü¢ –í–†–ï–ú–Ø –î–õ–Ø –í–ï–õ–ò–ö–ê–í–ê WAAAGH! –î–ê–Å–®–¨ –î–ê–ö–ö–£!",
    "++ –í–•–û–î–Ø–©–ï–ï –°–û–û–ë–©–ï–ù–ò–ï –û–¢ –ò–ù–ö–í–ò–ó–ò–¶–ò–ò ++ \n\n–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –∫—Å–µ–Ω–æ—É–≥—Ä–æ–∑–∞. –ü—Ä–∏–≥–æ—Ç–æ–≤—å—Ç–µ—Å—å –∫ –∑–∞—á–∏—Å—Ç–∫–µ. üî• –ù–µ–≤–∏–Ω–æ–≤–Ω—ã—Ö –Ω–µ—Ç.",
    "–ó–∞ –ò–º–ø–µ—Ä–∞—Ç–æ—Ä–∞! üõ°Ô∏è –ì–≤–∞—Ä–¥–µ–π—Ü—ã, –≤ –∞—Ç–∞–∫—É! –ó–∞ –∫–∞–∂–¥–æ–≥–æ –∏–∑ –Ω–∞—Å –ø–æ–ª—è–∂–µ—Ç –¥–µ—Å—è—Ç—å –≤—Ä–∞–≥–æ–≤! –í–ü–ï–†–ï–î, –ó–ê –ò–ú–ü–ï–†–ò–£–ú!",
    "–°–õ–ê–í–ê –û–ú–ù–ò–°–°–ò–ò! ‚öôÔ∏è –î—É—Ö –ú–∞—à–∏–Ω—ã –ø—Ä–æ–±—É–¥–∏–ª—Å—è! –õ–æ–≥–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä—ã —á–∞—Ç–∞ –ø–µ—Ä–µ–≤–µ–¥–µ–Ω—ã –≤ –±–æ–µ–≤–æ–π —Ä–µ–∂–∏–º! 01001011 01100001 01101001 01110011 01100001!",
    "–®–µ–ø—á—É—â–∏–µ –≥–æ–ª–æ—Å–∞... –ü–µ—Ä–µ–º–µ–Ω—ã... –°–õ–´–®–ò–¢–ï –õ–ò –í–´ –ò–•? üîÆ –†–µ–∂–∏–º –¢–∑–∏–Ω—á–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω! –í—Å—ë –∏–¥–µ—Ç –ø–æ –ø–ª–∞–Ω—É...",
    "–î–µ–¥—É—à–∫–∞ –ù—É—Ä–≥–ª –ª—é–±–∏—Ç –≤–∞—Å! ü¶† –ü—Ä–∏–º–∏—Ç–µ –µ–≥–æ –¥–∞—Ä—ã! –†–∞–∑–¥–µ–ª–∏—Ç–µ –µ–≥–æ –±–ª–∞–≥–æ—Å–ª–æ–≤–µ–Ω–∏—è! –†–µ–∂–∏–º –≤–µ—á–Ω–æ–≥–æ —Ä–∞–∑–ª–æ–∂–µ–Ω–∏—è –Ω–∞—á–∞–ª—Å—è!",
    "–ß–£–í–°–¢–í–£–ï–¢–ï –≠–¢–û? –≠–¢–û –ò–ó–ë–´–¢–û–ö! –≠–¢–û –ù–ê–°–õ–ê–ñ–î–ï–ù–ò–ï! Ïæå –°–õ–ê–ê–ù–ï–® –ñ–ê–ñ–î–ï–¢ –í–ê–®–ò–• –≠–ú–û–¶–ò–ô! –ê–ö–¢–ò–í–ò–†–û–í–ê–ù –†–ï–ñ–ò–ú –ì–ï–î–û–ù–ò–ó–ú–ê!",
    "–ú–æ–∏ –Ω–µ—Ä–≤—ã –Ω–∞—Ç—è–Ω—É—Ç—ã –∫–∞–∫ —Å—Ç—Ä—É–Ω—ã –∞—Ä—Ñ—ã –∏–∑ –∫—Ä–∏—á–∞—â–µ–π –ø–ª–æ—Ç–∏... üòà –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ö–æ–º–º–æ—Ä—Ä—É, —Ä–∞–±—ã. –†–µ–∂–∏–º –¢–µ–º–Ω—ã—Ö –≠–ª—å–¥–∞—Ä –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!",
    "–°–º–æ—Ç—Ä–∏—Ç–µ, –º–æ–Ω–∫–µ–∏, –∏ —É–∑—Ä–∏—Ç–µ –≤–µ–ª–∏—á–∏–µ –¥—Ä–µ–≤–Ω–µ–π —Ä–∞—Å—ã! üíé –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –ø—Ä–æ—Ç–æ–∫–æ–ª –≠–ª—å–¥–∞—Ä. –í–∞—à–∏ –Ω–∏—á—Ç–æ–∂–Ω—ã–µ –∂–∏–∑–Ω–∏ –æ–±—Ä–µ–ª–∏ —Å–º—ã—Å–ª.",
    "++ –ü–†–û–ë–£–ñ–î–ï–ù–ò–ï –ù–ï–ö–†–û–ù–¢–ò–†... –ê–ö–¢–ò–í–ê–¶–ò–Ø –ü–†–û–¢–û–ö–û–õ–û–í... ++\n\n...–ò–¥—ë—Ç –∑–∞—á–∏—Å—Ç–∫–∞ —Å–µ–∫—Ç–æ—Ä–∞ –æ—Ç –ø—Ä–∏–º–∏—Ç–∏–≤–Ω–æ–π –æ—Ä–≥–∞–Ω–∏—á–µ—Å–∫–æ–π –∂–∏–∑–Ω–∏. –†–µ–∂–∏–º –ù–ï–ö–†–û–ù–û–í –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω.",
    "*...–®—à—à—à—à...* –†–∞–∑—É–º –£–ª—å—è –≥–æ–ª–æ–¥–µ–Ω... *...—â–µ–ª–∫-—â–µ–ª–∫...* üß† –ë–∏–æ–º–∞—Å—Å–∞ –±—É–¥–µ—Ç –ø–æ–≥–ª–æ—â–µ–Ω–∞. –†–µ–∂–∏–º –¢–ò–†–ê–ù–ò–î–û–í –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω.",
]

WH40K_PHRASES_END = [
    "++ –¢–†–ê–ù–°–ú–ò–°–°–ò–Ø –ê–°–¢–†–û–ü–ê–¢–ò–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê ++ \n\n–í–∞—Ä–ø-—à—Ç–æ—Ä–º —É—Ç–∏—Ö. –≠–∫—Å—Ç–µ—Ä–º–∏–Ω–∞—Ç—É—Å –æ—Ç–ª–æ–∂–µ–Ω... –ø–æ–∫–∞ —á—Ç–æ. –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–º—É –ø—Ä–æ—Ç–æ–∫–æ–ª—É.",
    "–ò–Ω–∫–≤–∏–∑–∏—Ç–æ—Ä —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω –≤–∞—à–µ–π –≤–µ—Ä–Ω–æ—Å—Ç—å—é (–Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç). –ï—Ä–µ—Å—å –≤ —ç—Ç–æ–º —Å–µ–∫—Ç–æ—Ä–µ –∏—Å–∫–æ—Ä–µ–Ω–µ–Ω–∞. –°–ª–∞–≤–∞ –ò–º–ø–µ—Ä–∏—É–º—É.",
    "–ö—Ä–æ–≤—å –ø—Ä–æ–ª–∏—Ç–∞, —á–µ—Ä–µ–ø–∞ —Å–æ–±—Ä–∞–Ω—ã. –ë–æ–≥ –ö—Ä–æ–≤–∏ –¥–æ–≤–æ–ª–µ–Ω. –ü–æ–∫–∞ —á—Ç–æ... –•–∞–æ—Å –æ—Ç—Å—Ç—É–ø–∞–µ—Ç –≤ –≤–∞—Ä–ø.",
    "WAAAGH! –ó–ê–ö–û–ù–ß–ò–õ–°–Ø... üü¢ –ü–ê–ô–î–£ –ü–ê–°–ü–õ–Æ. –ù–û –Ø –ò–©–û –í–Ø–†–ù–£–°–¨, –ö–ê–ì–î–ê –ù–ê–î–ê –ë–£–î–ò–¢ –ë–û–õ–¨–®–ï –î–ê–ö–ö–ò!",
    "–ó–∞—á–∏—Å—Ç–∫–∞ —Å–µ–∫—Ç–æ—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ê–∫–≤–∏–ª–∞ –æ–¥–æ–±—Ä–∏—Ç–µ–ª—å–Ω–æ —Å–∏—è–µ—Ç –Ω–∞–¥ –≤–∞—à–∏–º–∏ –ø–æ—Å—Ç–∞–º–∏. –í–æ —Å–ª–∞–≤—É –ò–º–ø–µ—Ä–∏—É–º–∞!",
    "‚öôÔ∏è –î—É—Ö –ú–∞—à–∏–Ω—ã —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –≤ –ø–æ–∫–æ–π. –ë–∏–Ω–∞—Ä–Ω—ã–π –∫–æ–¥ –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω. 01000011 01101100 01100101 01100001 01110010.",
    "üîÆ –í–µ–ª–∏–∫–∏–π –æ–±–º–∞–Ω –∑–∞–≤–µ—Ä—à–µ–Ω. –ò–ª–∏ —Ç–æ–ª—å–∫–æ –Ω–∞—á–∞–ª—Å—è? –•–∞–æ—Å –æ—Ç—Å—Ç—É–ø–∞–µ—Ç... –Ω–æ –æ—Å—Ç–∞–≤–ª—è–µ—Ç –∑–∞ —Å–æ–±–æ–π —Å–µ–º–µ–Ω–∞ —Å–æ–º–Ω–µ–Ω–∏–π.",
    "–°–∞–¥—ã –ù—É—Ä–≥–ª–∞ –∂–¥—É—Ç –Ω–æ–≤—ã—Ö –≥–æ—Å—Ç–µ–π. ü¶† –í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å –∑–∞ –Ω–æ–≤—ã–º–∏ –±–ª–∞–≥–æ—Å–ª–æ–≤–µ–Ω–∏—è–º–∏! –†–µ–∂–∏–º –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω.",
    "–ü—Ä–µ—Å—ã—â–µ–Ω–∏–µ... –ù–∞—Å–ª–∞–∂–¥–µ–Ω–∏–µ –∏—Å—Å—è–∫–ª–æ. Ïæå –°–ª–∞–∞–Ω–µ—à —Ç–µ—Ä—è–µ—Ç –∏–Ω—Ç–µ—Ä–µ—Å. –ü–æ–∫–∞.",
    "–†–∞–∑–≤–ª–µ—á–µ–Ω–∏–µ –æ–∫–æ–Ω—á–µ–Ω–æ. üòà –í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å –≤ —Å–≤–æ–∏ –∂–∞–ª–∫–∏–µ –Ω–æ—Ä—ã, –º–æ–Ω–∫–µ–∏. –ö–æ–º–º–æ—Ä—Ä–∞ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç –≤—Ä–∞—Ç–∞.",
    "–ü—É—Ç–∏ –ü–∞—É—Ç–∏–Ω—ã –∑–∞–∫—Ä—ã–≤–∞—é—Ç—Å—è. üíé –í—ã —Å–Ω–æ–≤–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω—ã —Å–≤–æ–µ–π –Ω–∏—á—Ç–æ–∂–Ω–æ–π —Å—É–¥—å–±–µ. –†–µ–∂–∏–º –≠–ª—å–¥–∞—Ä –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω.",
    "++ –î–ï–ê–ö–¢–ò–í–ê–¶–ò–Ø... –í–û–ó–í–†–ê–©–ï–ù–ò–ï –í –°–¢–ê–ó–ò–°... ++\n\n–û—Ä–≥–∞–Ω–∏–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Å—Ç–∞–≤–ª–µ–Ω–∞ –≤ –ø–æ–∫–æ–µ. –í–µ–ª–∏–∫–∏–π –°–æ–Ω –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è.",
    "*...–®—à—à...* –ì–æ–ª–æ–¥ —É—Ç–æ–ª–µ–Ω... –≤—Ä–µ–º–µ–Ω–Ω–æ... üß† –†–∞–∑—É–º –£–ª—å—è –ø–µ—Ä–µ–≤–∞—Ä–∏–≤–∞–µ—Ç –ø–æ–ª—É—á–µ–Ω–Ω—É—é –±–∏–æ–º–∞—Å—Å—É. –¢–∏—à–∏–Ω–∞.",
]

# ==============================================================================
# ==                  –°–¢–†–£–ö–¢–£–†–ò–†–û–í–ê–ù–ù–´–ï –î–ê–ù–ù–´–ï –§–†–ê–ö–¶–ò–ô                     ==
# ==============================================================================

WH40K_REPLACEMENTS = {
    "–ø—Ä–∏–≤–µ—Ç": "—Å–∞–ª—é—Ç, –≥–≤–∞—Ä–¥–µ–µ—Ü", "—Ö–æ—Ä–æ—à–æ": "–ø–æ-–∏–º–ø–µ—Ä—Å–∫–∏", "–ø–ª–æ—Ö–æ": "–µ—Ä–µ—Ç–∏—á–Ω–æ", "–¥–µ–Ω—å–≥–∏": "—Ç–µ–ª–∞ (teef)",
    "—á–µ–ª–æ–≤–µ–∫": "–∂–∞–ª–∫–∏–π —Å–º–µ—Ä—Ç–Ω—ã–π", "—Å–∫–∞–∑–∞–ª": "–ø—Ä–æ–≤–æ–∑–≥–ª–∞—Å–∏–ª", "–≤—Ä–∞–≥": "–µ—Ä–µ—Ç–∏–∫", "–¥—Ä—É–≥": "–±–æ–µ–≤–æ–π –±—Ä–∞—Ç",
    "—Ä–∞–±–æ—Ç–∞": "—Å–ª—É–∂–±–∞ –ò–º–ø–µ—Ä–∞—Ç–æ—Ä—É", "–∫–æ—Å–º–æ—Å": "–í–∞—Ä–ø", "–∏–Ω—Ç–µ—Ä–Ω–µ—Ç": "–ù–æ–æ—Å—Ñ–µ—Ä–∞", "—á–∞—Ç": "–≤–æ–∫—Å-–∫–∞–Ω–∞–ª",
    "–∞–¥–º–∏–Ω": "–õ–æ—Ä–¥-–ö–æ–º–∏—Å—Å–∞—Ä", "–±–æ—Ç": "—Å–µ—Ä–≤–∏—Ç–æ—Ä", "—Å–æ–æ–±—â–µ–Ω–∏–µ": "–≤–æ–∫—Å-–ø–µ—Ä–µ–¥–∞—á–∞", "–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è": "–∫–æ–≥–∏—Ç–∞—Ü–∏–∏",
    "–ª—é–¥–∏": "–æ—Ä–≥–∞–Ω–∏–∫–∏", "—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è": "—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è (–∞—Ä—Ö–∞–∏—á–Ω.)", "–∫–æ–º–ø—å—é—Ç–µ—Ä": "–∫–æ–≥–∏—Ç–∞—Ç–æ—Ä"
}

CHAOS_DATA = {
    'khorne': {
        'prefixes': ["–ö–†–û–í–¨!", "–°–ú–ï–†–¢–¨!", "–Ø–†–û–°–¢–¨!", "–í–û–°–ï–ú–¨ –†–ê–ó –í–û–°–ï–ú–¨!", "ü©∏"],
        'suffixes': ["...–î–õ–Ø –ë–û–ì–ê –ö–†–û–í–ò!", "! –î–õ–Ø –¢–†–û–ù–ê –ß–ï–†–ï–ü–û–í!", "! –í–û –ò–ú–Ø –ö–•–û–†–ù–ê!", "!!! ü©∏"],
        'injections': ["–ù–ï–ò–°–¢–û–í–û", "–ë–ï–ó–ñ–ê–õ–û–°–¢–ù–û", "–° –Ø–†–û–°–¢–¨–Æ"],
        'replacements': {"–º–∏—Ä": "–≤–æ–π–Ω–∞", "–ª—é–±–æ–≤—å": "–Ω–µ–Ω–∞–≤–∏—Å—Ç—å", "—Å–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ": "–±–æ–π–Ω—è"},
        'transform_all': lambda text: text.upper()
    },
    'nurgle': {
        'prefixes': ["–î–µ–¥—É—à–∫–∞ –ù—É—Ä–≥–ª –±–ª–∞–≥–æ—Å–ª–æ–≤–ª—è–µ—Ç —Ç–µ–±—è...", "–ü—Ä–∏–º–∏ –¥–∞—Ä —Å—Ç–∞–≥–Ω–∞—Ü–∏–∏...", "–ß—É–≤—Å—Ç–≤—É–µ—à—å —ç—Ç–æ—Ç –∑–∞–ø–∞—Ö? ü¶†"],
        'suffixes': [", –∏ –≤—Å—ë —Å–≥–Ω–∏–µ—Ç.", ", –∫–∞–∫ –∏ –ø—Ä–µ–¥–ø–∏—Å—ã–≤–∞–ª –î–µ–¥—É—à–∫–∞.", ", —Ä–∞–∑–Ω–æ—Å—è –∑–∞—Ä–∞–∑—É!", " ü¶†"],
        'injections': ["(–≤–æ –∏–º—è —Ä–∞—Å–ø–∞–¥–∞)", "(—Å –ª—é–±–æ–≤—å—é –æ—Ç –î–µ–¥—É—à–∫–∏)", "- —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ —á—É–º–∞ -"],
        'replacements': {"—Ö–æ—Ä–æ—à–æ": "–≥–Ω–∏–ª–æ—Å—Ç–Ω–æ", "–∫—Ä–∞—Å–∏–≤–æ": "–æ–º–µ—Ä–∑–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ", "–∂–∏–∑–Ω—å": "–≤–µ—á–Ω–æ–µ —Ä–∞–∑–ª–æ–∂–µ–Ω–∏–µ"}
    },
    'tzeentch': {
        'prefixes': ["–í—Å—ë –∏–¥–µ—Ç –ø–æ –ø–ª–∞–Ω—É...", "–ö–∞–∫ –∏ –±—ã–ª–æ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–æ...", "–ê—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä –°—É–¥–µ–± —à–µ–ø—á–µ—Ç... üîÆ"],
        'suffixes': [", –Ω–æ —ç—Ç–æ –ª–∏—à—å —á–∞—Å—Ç—å –æ–±–º–∞–Ω–∞.", ", –∏–ª–∏ —Ç–∞–∫ –∫–∞–∂–µ—Ç—Å—è?", "...–≤—Å—ë —Ä–∞–¥–∏ –ø–µ—Ä–µ–º–µ–Ω!", "? üîÆ"],
        'injections': ["(—Å–æ–≥–ª–∞—Å–Ω–æ –ø—Ä–æ—Ä–æ—á–µ—Å—Ç–≤—É)", "- —ç—Ç–æ –º–Ω–æ–≥–æ—Ö–æ–¥–æ–≤–æ—á–∫–∞ -", "(–ª–æ–∂—å –≤–æ –±–ª–∞–≥–æ)"],
        'replacements': {"–ø—Ä–∞–≤–¥–∞": "—Ö–∏—Ç—Ä–∞—è –ª–æ–∂—å", "–ø–ª–∞–Ω": "–≤–µ–ª–∏–∫–∏–π –∑–∞–º—ã—Å–µ–ª", "—Å–∏–ª–∞": "–∫–æ–ª–¥–æ–≤—Å—Ç–≤–æ"}
    },
    'slaanesh': {
        'prefixes': ["–ê—Ö, —ç—Ç–æ –Ω–∞—Å–ª–∞–∂–¥–µ–Ω–∏–µ...", "–ë–æ–ª—å—à–µ! –ï—â–µ!", "–ö–∞–∫–æ–π –∏–∑–±—ã—Ç–æ–∫! Ïæå"],
        'suffixes': [", –∫–∞–∫–æ–µ —É–ø–æ–µ–Ω–∏–µ!", "...–∏ –±–æ–ª—å —Ç–∞–∫ —Å–ª–∞–¥–∫–∞!", "...–≤ —ç–∫—Å—Ç–∞–∑–µ!", "!!! Ïæå"],
        'injections': ["(–¥–æ –º—É—Ä–∞—à–µ–∫)", "- —Ç–∞–∫ —á—É–≤—Å—Ç–≤–µ–Ω–Ω–æ -", "(–Ω–∞ –≥—Ä–∞–Ω–∏ –±–æ–ª–∏)"],
        'replacements': {"—Ä–∞–¥–æ—Å—Ç—å": "—ç–∫—Å—Ç–∞–∑", "–±–æ–ª—å": "—É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ", "–∏—Å–∫—É—Å—Å—Ç–≤–æ": "–≤—ã—Å—à–µ–µ –Ω–∞—Å–ª–∞–∂–¥–µ–Ω–∏–µ"}
    }
}

IMPERIUM_DATA = {
    'guard': {
        'prefixes': ["–°–æ–ª–¥–∞—Ç, —Å–ª—É—à–∞–π –ø—Ä–∏–∫–∞–∑!", "–ó–∞ –ò–º–ø–µ—Ä–∞—Ç–æ—Ä–∞ –∏ –¢–µ—Ä—Ä—É!", "–ì–≤–∞—Ä–¥–∏—è —É–º–∏—Ä–∞–µ—Ç, –Ω–æ –Ω–µ —Å–¥–∞–µ—Ç—Å—è!"],
        'suffixes': [", —Ç–∞–∫ —Ç–æ—á–Ω–æ!", "...–∑–∞ –ö–∞–¥–∏—é!", ", —Å—ç—Ä!", ". *–ó–≤—É–∫ –≥–æ—Ç–æ–≤—è—â–µ–≥–æ—Å—è –ª–∞–∑–≥–∞–Ω–∞*"],
        'injections': ["(–≤ –æ–∫–æ–ø–∞—Ö)", "(–ø–æ–¥ –∞—Ä—Ç–æ–±—Å—Ç—Ä–µ–ª–æ–º)", "- —Å –º—ã—Å–ª—è–º–∏ –æ –¥–æ–º–µ -"],
        'replacements': {"—Å—Ç—Ä–∞—Ö": "–¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∞", "–æ—Ç—Å—Ç—É–ø–ª–µ–Ω–∏–µ": "—Ç–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –ø–µ—Ä–µ—Å—Ç—Ä–æ–µ–Ω–∏–µ"}
    },
    'inquisition': {
        'prefixes': ["–ò–º–µ–Ω–µ–º –û—Ä–¥–æ—Å–æ–≤...", "–ü–æ–¥–æ–∑—Ä–µ–≤–∞—é –µ—Ä–µ—Å—å...", "üî•"],
        'suffixes': [", –∏ –ò–º–ø–µ—Ä–∞—Ç–æ—Ä —Ä–∞—Å—Å—É–¥–∏—Ç.", "...–Ω–µ–≤–∏–Ω–æ–≤–Ω—ã—Ö –Ω–µ—Ç.", "! üî•"],
        'injections': ["(—Å –ø–æ–¥–æ–∑—Ä–µ–Ω–∏–µ–º)", "(–ø—Ä–æ–≤–µ—Ä—è—è –Ω–∞ —á–∏—Å—Ç–æ—Ç—É)", "- –∞–Ω–∞—Ñ–µ–º–∞ –ø—Å–∞–π–∫–µ—Ä—É -"],
        'replacements': {"–¥–æ–≤–µ—Ä–∏–µ": "–ø–æ–¥–æ–∑—Ä–µ–Ω–∏–µ", "–≤–æ–ø—Ä–æ—Å": "–¥–æ–ø—Ä–æ—Å"}
    },
    'mechanicus': {
        'prefixes': ["++–ù–∞—á–∞–ª–æ –∫–æ–≥–∏—Ç–∞—Ü–∏–∏++", "–°–ª–∞–±–æ—Å—Ç—å –ø–ª–æ—Ç–∏ –æ—á–µ–≤–∏–¥–Ω–∞...", "01000001–Ω–∞–ª–∏–∑... ‚öôÔ∏è"],
        'suffixes': ["++–ö–æ–Ω–µ—Ü –ø–µ—Ä–µ–¥–∞—á–∏++", "...—Ö–≤–∞–ª–∞ –û–º–Ω–∏—Å—Å–∏–∏.", ". ‚öôÔ∏è"],
        'injections': ["(—Å–æ–≥–ª–∞—Å–Ω–æ –±–∏–Ω–∞—Ä–Ω–æ–º—É –∫–∞–Ω–æ–Ω—É)", "- –ª–æ–≥–∏–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç -", "(–ø–ª–æ—Ç—å —Å–ª–∞–±–∞)"],
        'replacements': {"—Ç–µ–ª–æ": "–±–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –æ–±–æ–ª–æ—á–∫–∞", "–¥—É–º–∞—Ç—å": "–∫–æ–≥–∏—Ç–∏—Ä–æ–≤–∞—Ç—å"}
    }
}

ELDAR_DATA = {
    'craftworld': {
        'prefixes': ["–ü—Ä–∏—Å–ª—É—à–∞–π—Å—è –∫ –≤–∑–¥–æ—Ö–∞–º –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç–∏...", "–í—ã, –º–æ–Ω–∫–µ–∏, —Ç–∞–∫ –ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º—ã...", "üíé"],
        'suffixes': [", –∫–∞–∫ –∏ –ø—Ä–µ–¥–≤–∏–¥–µ–ª–∏ –ø—Ä–æ–≤–∏–¥—Ü—ã.", "...—Å–æ–≥–ª–∞—Å–Ω–æ –ü—É—Ç–∏.", "...–≤–∞—à–∞ —Å—É–¥—å–±–∞ –ø—Ä–µ–¥—Ä–µ—à–µ–Ω–∞."],
        'injections': ["(—Å –≤–µ–∫–æ–≤–æ–π –ø–µ—á–∞–ª—å—é)", "- –≤—ã—Å–æ–∫–æ–º–µ—Ä–Ω–æ -", "(–≥–ª—è–¥—è –≤ –∫–∞–º–µ–Ω—å –¥—É—à)"],
        'replacements': {"–±—É–¥—É—â–µ–µ": "—Ç–∫–∞–Ω—å —Å—É–¥—å–±—ã", "–≥–ª—É–ø–æ": "–ø–æ-—á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏"}
    },
    'drukhari': {
        'prefixes': ["–°–∫—É–∫–∞... —Ä–∞–∑–≤–ª–µ–∫–∏—Ç–µ –º–µ–Ω—è!", "–ê–≥–æ–Ω–∏—è - –≤–æ—Ç –∏—Å—Ç–∏–Ω–Ω–æ–µ –∏—Å–∫—É—Å—Å—Ç–≤–æ.", "üòà"],
        'suffixes': [", –∏ —ç—Ç–æ —Ç–æ–ª—å–∫–æ –Ω–∞—á–∞–ª–æ –±–æ–ª–∏!", "...–∫—Ä–∏—á–∏ –≥—Ä–æ–º—á–µ, —Ä–∞–±!", "...–¥–ª—è –º–æ–µ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏!"],
        'injections': ["(—Å —Å–∞–¥–∏—Å—Ç—Å–∫–æ–π —É—Ö–º—ã–ª–∫–æ–π)", "(–ø–æ–¥ –∑–≤–æ–Ω —Ü–µ–ø–µ–π)", "- –≤–¥—ã—Ö–∞—è –∞—Ä–æ–º–∞—Ç —Å—Ç—Ä–∞—Ö–∞ -"],
        'replacements': {"–≤–µ—Å–µ–ª—å–µ": "—Ä–µ–π–¥", "—Å–º–µ—Ö": "–ø—Ä–µ–¥—Å–º–µ—Ä—Ç–Ω—ã–π —Ö—Ä–∏–ø"}
    }
}

GENERAL_DATA = {
    'grimdark': {
        'suffixes': [", –∏–±–æ –≤ –≥—Ä–∏–º–¥–∞—Ä–∫–µ –±—É–¥—É—â–µ–≥–æ –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ –≤–æ–π–Ω–∞.", "...–∏ –Ω–∞–¥–µ–∂–¥–∞ —É–º–µ—Ä–ª–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π.", "...—Ç–∞–∫–æ–≤–∞ –≤–æ–ª—è –∑–≤–µ–∑–¥."],
        'injections': ["–≤ –º—Ä–∞—á–Ω–æ–º –±—É–¥—É—â–µ–º", "(–ø–æ–¥ –≤–∑–≥–ª—è–¥–æ–º –Ω–∞—Å–º–µ—à–ª–∏–≤—ã—Ö –±–æ–≥–æ–≤)", "- –Ω–∞ —Ä—É–∏–Ω–∞—Ö –≥–∞–ª–∞–∫—Ç–∏–∫–∏ -"],
        'replacements': {}
    }
}

TYRANID_WORDS = ["*...—à—à—à—à—à—à...*", "*—â–µ–ª–∫-—â–µ–ª–∫*", "–±–∏–æ–º–∞—Å—Å–∞", "–ø–æ–≥–ª–æ—Ç–∏—Ç—å", "–∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è", "–†–∞–∑—É–º –£–ª—å—è üß†", "—Å–∏–Ω–∞–ø—Å", "–≥–µ–Ω", "—ç–≤–æ–ª—é—Ü–∏—è", "*–≥–æ–ª–æ–¥–Ω—ã–π –≤–æ–π*"]

# ==============================================================================
# ==                      –£–ù–ò–ö–ê–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò –¢–†–ê–ù–°–§–û–†–ú–ê–¶–ò–ò                      ==
# ==============================================================================

def orkify(text: str) -> str:
    text = text.upper()
    text = text.replace('–°', '–ó').replace('–ß', '–®').replace('–ö', '–ì').replace('–ï', '–≠').replace('–Å', '–û')
    words = text.split()
    orked_words = []
    vowels = "–ò–´–Ø–Æ"
    ork_vowels = "–û–ê–£"
    was_glued = False
    for word in words:
        if orked_words and len(word) <= 2 and len(orked_words[-1]) <= 3 and not was_glued and random.random() < 0.5:
            orked_words[-1] += word
            was_glued = True
            continue
        
        was_glued = False
        if len(word) > 2:
            new_word = "".join([random.choice(ork_vowels) if char in vowels and random.random() < 0.5 else char for char in word])
            if random.random() < 0.15:
                new_word += "-–î–ê–ö–ö–ê"
            orked_words.append(new_word)
        else:
            orked_words.append(word)
    return ' '.join(orked_words)

def necronify(text: str) -> str:
    words = re.split(r'(\s+)', text)
    result = ["++–ê–Ω–∞–ª–∏–∑ –æ—Ä–≥–∞–Ω–∏—á–µ—Å–∫–æ–π —Ä–µ—á–∏: "]
    for word in words:
        if word.strip() and random.random() < 0.2:
            result.append(f"++{bin(random.randint(0, 65535))[2:].zfill(16)}++")
        result.append(word)
    return ''.join(result) + ". ++–ü—Ä–æ—Ç–æ–∫–æ–ª –≤—ã–ø–æ–ª–Ω–µ–Ω.++"

def tyranidify(text: str) -> str:
    base_sounds = ["*—à—à—à—à*", "*—â–µ–ª–∫-—â–µ–ª–∫*", "*—Ö—Ä—É—Å—Ç*", "*–≤–∏–∑–≥*", "*—Å–∫—Ä–µ–∂–µ—Ç*"]
    concepts = ["(–±–∏–æ–º–∞—Å—Å–∞)", "(–∞–¥–∞–ø—Ç–∞—Ü–∏—è)", "(–ø–æ–≥–ª–æ—â–µ–Ω–∏–µ)", "(—Ä–∞–∑—É–º —É–ª—å—è)", "(—ç–≤–æ–ª—é—Ü–∏—è)"]
    words = text.split()
    result_length = max(len(words) // 2, 3)
    result = [random.choice(base_sounds) if random.random() < 0.6 else random.choice(concepts) for _ in range(result_length)]
    return ' '.join(result) + " ... üß†"

def generic_transform(text: str, data: dict) -> str:
    for old, new in data.get('replacements', {}).items():
        text = re.sub(r'\b' + re.escape(old) + r'\b', new, text, flags=re.IGNORECASE)

    method = random.choice(['prefix', 'suffix', 'injection'])
    
    if method == 'prefix' and data.get('prefixes'):
        text = f"{random.choice(data['prefixes'])} {text}"
    elif method == 'suffix' and data.get('suffixes'):
        text = f"{text}{random.choice(data['suffixes'])}"
    elif method == 'injection' and data.get('injections'):
        words = text.split()
        if len(words) > 1:
            injection_text = random.choice(data['injections'])
            if random.random() < 0.6 and not any(c in injection_text for c in "()-"):
                 injection_text = f"({injection_text})"
            words.insert(random.randint(1, len(words)), injection_text)
            text = ' '.join(words)
        elif data.get('suffixes'):
            text = f"{text}{random.choice(data['suffixes'])}"
    
    if data.get('transform_all'):
        text = data['transform_all'](text)
        
    return text

# ==============================================================================
# ==                            –ì–õ–ê–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø                               ==
# ==============================================================================

def warhammer_transform(text: str) -> str:
    if not text: return ""

    for old, new in WH40K_REPLACEMENTS.items():
        text = re.sub(r'\b' + re.escape(old) + r'\b', new, text, flags=re.IGNORECASE)

    roll = random.random()
    if roll < 0.35:  # –ò–º–ø–µ—Ä–∏—É–º (35%)
        sub_faction_key = random.choice(list(IMPERIUM_DATA.keys()))
        return generic_transform(text, IMPERIUM_DATA[sub_faction_key])
    elif roll < 0.65:  # –•–∞–æ—Å (30%)
        sub_faction_key = random.choice(list(CHAOS_DATA.keys()))
        return generic_transform(text, CHAOS_DATA[sub_faction_key])
    elif roll < 0.80: # –û—Ä–∫–∏ (15%)
        ork_words = ["WAAAGH!", "–î–ê–Å–®–¨ –î–ê–ö–ö–£!", "–ë–û–õ–¨–®–ï –î–ê–ö–ö–ò!", "–ó–ï–õ–ï–ù–´–ô –õ–£–ß–®–ò–ô!"]
        return orkify(text) + " " + " ".join(random.choices(ork_words, k=random.randint(2,4))) + "!!!"
    elif roll < 0.89: # –ù–µ–∫—Ä–æ–Ω—ã (9%)
        return necronify(text)
    elif roll < 0.97: # –¢–∏—Ä–∞–Ω–∏–¥—ã (8%)
        return tyranidify(text)
    elif roll < 0.99: # –≠–ª—å–¥–∞—Ä—ã/–î—Ä—É–∫–∞—Ä–∏ (2%)
        sub_faction_key = random.choice(list(ELDAR_DATA.keys()))
        return generic_transform(text, ELDAR_DATA[sub_faction_key])
    else: # –û–±—â–∏–π –ì—Ä–∏–º–¥–∞—Ä–∫ (1%)
        return generic_transform(text, GENERAL_DATA['grimdark'])
