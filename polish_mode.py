import random
import re

POLISH_PHRASES_START = [
    "üáµüá± UWAGA, UWAGA! AKTYWOWANO TRYB POLSKI! üáµüá±\n\nO, kurwa! Czas na pierogi, bigos i narzekanie na wszystko! POLSKA GUROM!",
    "O kurwa, jebany! W≈ÇƒÖczono 'Protok√≥≈Ç B√≥br'! üáµüá± Czas rozkurwiƒá system!",
    "BOSZE, CO ZA INBA! üáµüá± Wje≈ºd≈ºamy z trybem polskim! Kto nie skacze, ten z PiS-u!",
    "Alarm! Poziom 'Polsko≈õci' w czacie przekroczy≈Ç normƒô! WITAMY W POLSCE, KURWA!",
    "ROZPOCZYNAMY 'OPERACJƒò HUSARZ'! üáµüá± Skrzyd≈Ça roz≈Ço≈ºone, pierogi podgrzane. Do boju!",
    "Co jest, kurwa?! üáµüá± Tryb 'Janusz' aktywowany! Skarpetki do sanda≈Ç√≥w, siatka z Biedronki i jedziemy!",
    "No i chuj, no i cze≈õƒá! W≈ÇƒÖczono tryb 'Polska My≈õl Szkoleniowa'! Jako≈õ to bƒôdzie, kurwa!",
]

POLISH_PHRASES_END = [
    "Dobra, kurwa, wystarczy tego polskiego pierdolenia. üáµüá± Wracamy do normalno≈õci, bo zaraz nas PiS opodatkuje.",
    "Koniec inby. üáµüá± B√≥br poszed≈Ç spaƒá. Tryb polski wy≈ÇƒÖczony, mo≈ºna znowu m√≥wiƒá po ludzku.",
    "Bo≈ºe, jak mi wstyd... Wy≈ÇƒÖczamy ten tryb, zanim kto≈õ wezwie TVP Info.",
    "W√≥dka siƒô sko≈Ñczy≈Ça, pierogi zjedzone. üáµüá± Polski cud gospodarczy dobieg≈Ç ko≈Ñca. Wy≈ÇƒÖczam tryb.",
    "Dobra, fajrant. Czas na przerwƒô od bycia Polakiem. To mƒôczƒÖce, kurwa.",
]

POLISH_DATA = {
    'prefixes': [
        "S≈Çuchajcie, kurwa...", "Generalnie to jest tak:", "No wiƒôc, ja pierdolƒô,", "Patrzcie, co za akcja:",
    ],
    'suffixes': [
        ", nie?", ", i chuj.", ", wiadomo.", ", tak to ju≈º jest.", ", masakra.", ", rozumiesz.", ". I tyle w temacie.", ", essa.",
    ],
    'injections': [
        "(ja pierdolƒô)", "(nosz kurwa)", "(co za ≈ºenada)", "(takie ≈ºycie)", "(polska, rozumiesz)", "(bez kitu)",
    ],
    'replacements': {
        '–ø—Ä–∏–≤–µ—Ç': 'siema', '–ø–æ–∫–∞': 'nara', '–¥–∞': 'no', '–Ω–µ—Ç': 'nie', '—á—Ç–æ': 'co', '—Ö–æ—Ä–æ—à–æ': 'dobrze', '–ø–ª–æ—Ö–æ': 'chujowo',
        '–¥–µ–Ω—å–≥–∏': 'pieniƒÖdze', '—Ä–∞–±–æ—Ç–∞': 'robota', '–ø–æ–∂–∞–ª—É–π—Å—Ç–∞': 'proszƒô', '—Å–ø–∞—Å–∏–±–æ': 'dziƒôki', '–ø–∏–∑–¥–µ—Ü': 'ja pierdolƒô',
        '—Å—É–∫–∞': 'kurwa', '–±–ª—è—Ç—å': 'kurwa maƒá', '–∑–∞–µ–±–∏—Å—å': 'zajebi≈õcie', '—á–µ–ª–æ–≤–µ–∫': 'go≈õciu'
    }
}


def kurwa_comma_transform(text: str) -> str:
    """
    –° –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é 50% –∑–∞–º–µ–Ω—è–µ—Ç –∫–∞–∂–¥—É—é –∑–∞–ø—è—Ç—É—é –Ω–∞ ", kurwa,".
    """
    if random.random() < 0.5:
        return text
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –≤ re.sub –¥–ª—è –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–Ω–æ–π –∑–∞–º–µ–Ω—ã
    def replacer(match):
        return ", kurwa," if random.random() < 0.5 else ","

    return re.sub(r',', replacer, text)


def polish_transform(text: str) -> str:
    """
    –¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç, –¥–æ–±–∞–≤–ª—è—è –≤ –Ω–µ–≥–æ –ø–æ–ª—å—Å–∫–∏–π –∫–æ–ª–æ—Ä–∏—Ç, –∏—Å–ø–æ–ª—å–∑—É—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–¥—Ö–æ–¥.
    """
    if not text:
        return ""
    
    # 1. –ó–∞–º–µ–Ω–∞ —Å–ª–æ–≤
    for rus, pol in POLISH_DATA['replacements'].items():
        text = re.sub(r'\b' + re.escape(rus) + r'\b', pol, text, flags=re.IGNORECASE)

    # 2. –¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è "kurwa-–∑–∞–ø—è—Ç–∞—è"
    text = kurwa_comma_transform(text)
    
    # 3. –í—ã–±–æ—Ä –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ—Ç–æ–¥–∞ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏
    method = random.choice(['prefix', 'suffix', 'injection', 'suffix']) # —Å—É—Ñ—Ñ–∏–∫—Å –¥–≤–∞–∂–¥—ã –¥–ª—è –±–æ–ª—å—à–µ–π –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏
    
    transformed = False
    if method == 'prefix':
        text = f"{random.choice(POLISH_DATA['prefixes'])} {text}"
        transformed = True
    elif method == 'suffix':
        text = f"{text}{random.choice(POLISH_DATA['suffixes'])}"
        transformed = True
    elif method == 'injection':
        words = text.split()
        if len(words) > 2:
            injection_point = random.randint(1, len(words) - 1)
            words.insert(injection_point, random.choice(POLISH_DATA['injections']))
            text = ' '.join(words)
            transformed = True

    # 4. –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º, —á—Ç–æ —Ö–æ—Ç—å –∫–∞–∫–∞—è-—Ç–æ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è –±—ã–ª–∞, –µ—Å–ª–∏ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∏ –æ—Å–Ω–æ–≤–Ω—ã–µ
    if not transformed:
        text += f", {random.choice(['kurwa', 'nie?', 'wiadomo'])}."
        
    return text
